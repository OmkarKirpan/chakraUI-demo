{"version":3,"sources":["ColorModeSwitcher.js","ErrorMessage.js","utils/mockApi.js","App.js","index.js"],"names":["ColorModeSwitcher","props","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","size","fontSize","aria-label","variant","color","marginLeft","onClick","icon","ErrorMessage","message","my","status","borderRadius","userSubmit","a","name","address","email","tel","alttel","gstNum","website","Promise","resolve","reject","setTimeout","console","log","App","useState","setName","setAddress","setEmail","setTel","setAlttel","setGstNum","setWebsite","error","setError","isloading","setIsLoading","handleSubmit","event","preventDefault","textAlign","py","mr","p","width","align","justifyContent","maxWidth","borderWidth","boxShadow","onSubmit","mt","type","placeholder","onChange","currentTarget","value","pointerEvents","children","Email","Phone","isLoading","loadingText","colorScheme","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.637ba294.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useColorMode, useColorModeValue, IconButton } from \"@chakra-ui/react\";\r\nimport { FaMoon, FaSun } from \"react-icons/fa\";\r\n\r\nexport const ColorModeSwitcher = (props) => {\r\n  const { toggleColorMode } = useColorMode();\r\n  const text = useColorModeValue(\"dark\", \"light\");\r\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\r\n\r\n  return (\r\n    <IconButton\r\n      size=\"md\"\r\n      fontSize=\"lg\"\r\n      aria-label={`Switch to ${text} mode`}\r\n      variant=\"ghost\"\r\n      color=\"current\"\r\n      marginLeft=\"2\"\r\n      onClick={toggleColorMode}\r\n      icon={<SwitchIcon />}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Box, Alert, AlertIcon, AlertDescription } from \"@chakra-ui/react\";\r\n\r\nexport default function ErrorMessage({ message }) {\r\n  return (\r\n    <Box my={4}>\r\n      <Alert status=\"error\" borderRadius={4}>\r\n        <AlertIcon />\r\n        <AlertDescription>{message}</AlertDescription>\r\n      </Alert>\r\n    </Box>\r\n  );\r\n}\r\n","const userSubmit = async ({\r\n  name,\r\n  address,\r\n  email,\r\n  tel,\r\n  alttel,\r\n  gstNum,\r\n  website\r\n}) => {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      console.log(\r\n        `Company Details: \\n name=${name}, address=${address}, email=${email}, tel=${tel}, alttel=${alttel}, gstNum=${gstNum}, website=${website}`\r\n      );\r\n      if (email === \"okirpan@gmail.com\") {\r\n        resolve();\r\n      } else {\r\n        reject(\"Email is wrong\");\r\n      }\r\n    }, 3000);\r\n  });\r\n};\r\n\r\nexport default userSubmit;\r\n","import { useState } from \"react\";\r\n\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Heading,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  InputGroup,\r\n  InputLeftElement,\r\n  Textarea,\r\n  Button,\r\n} from \"@chakra-ui/react\";\r\nimport { PhoneIcon, EmailIcon } from \"@chakra-ui/icons\";\r\nimport { ColorModeSwitcher } from \"./ColorModeSwitcher\";\r\nimport ErrorMessage from \"./ErrorMessage\";\r\nimport userSubmit from \"./utils/mockApi\";\r\n\r\nexport default function App() {\r\n  const [name, setName] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [tel, setTel] = useState(\"\");\r\n  const [alttel, setAlttel] = useState(\"\");\r\n  const [gstNum, setGstNum] = useState(\"\");\r\n  const [website, setWebsite] = useState(\"\");\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const [isloading, setIsLoading] = useState(false);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setError(\"\");\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      await userSubmit({ name, address, email, tel, alttel, gstNum, website });\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setError(\"Something went wrong.\");\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box textAlign=\"right\" py={4} mr={12}>\r\n        <ColorModeSwitcher />\r\n      </Box>\r\n      <Flex p={4} width=\"full\" align=\"center\" justifyContent=\"center\">\r\n        <Box\r\n          p={8}\r\n          width=\"60%\"\r\n          maxWidth=\"1200px\"\r\n          borderWidth={1}\r\n          borderRadius={8}\r\n          boxShadow=\"lg\"\r\n        >\r\n          <Box textAlign=\"center\">\r\n            <Heading>Company Details</Heading>\r\n          </Box>\r\n          {/* <ErrorMessage message={\"Error Message\"} /> */}\r\n          {error && <ErrorMessage message={error} />}\r\n          <Box my={4} textAlign=\"left\">\r\n            <form onSubmit={handleSubmit}>\r\n              <FormControl mt={2}>\r\n                <FormLabel>Name</FormLabel>\r\n                <Input\r\n                  type=\"name\"\r\n                  placeholder=\"Company Name\"\r\n                  onChange={(event) => setName(event.currentTarget.value)}\r\n                />\r\n              </FormControl>\r\n              <FormControl mt={2}>\r\n                <FormLabel>Address</FormLabel>\r\n                <Textarea\r\n                  type=\"address\"\r\n                  placeholder=\"Company Address\"\r\n                  onChange={(event) => setAddress(event.currentTarget.value)}\r\n                />\r\n              </FormControl>\r\n              <FormControl mt={2}>\r\n                <FormLabel>Email</FormLabel>\r\n                <InputGroup>\r\n                  <InputLeftElement\r\n                    pointerEvents=\"none\"\r\n                    children={<EmailIcon color=\"gray.300\" />}\r\n                  />\r\n                  <Input\r\n                    type=\"email\"\r\n                    placeholder=\"test@test.com\"\r\n                    onChange={(event) => setEmail(event.currentTarget.value)}\r\n                  />\r\n                </InputGroup>\r\n              </FormControl>\r\n              <FormControl mt={2}>\r\n                <FormLabel>Phone</FormLabel>\r\n                <InputGroup>\r\n                  <InputLeftElement\r\n                    pointerEvents=\"none\"\r\n                    children={<PhoneIcon color=\"gray.300\" />}\r\n                  />\r\n                  <Input\r\n                    type=\"tel\"\r\n                    placeholder=\"Company Phone number\"\r\n                    onChange={(event) => setTel(event.currentTarget.value)}\r\n                  />\r\n                </InputGroup>\r\n              </FormControl>\r\n              <FormControl mt={2}>\r\n                <FormLabel>Alternate Phone</FormLabel>\r\n                <InputGroup>\r\n                  <InputLeftElement\r\n                    pointerEvents=\"none\"\r\n                    children={<PhoneIcon color=\"gray.300\" />}\r\n                  />\r\n                  <Input\r\n                    type=\"alttel\"\r\n                    placeholder=\"Company Alternate Phone number\"\r\n                    onChange={(event) => setAlttel(event.currentTarget.value)}\r\n                  />\r\n                </InputGroup>\r\n              </FormControl>\r\n              <FormControl mt={2}>\r\n                <FormLabel>GST Number</FormLabel>\r\n                <Input\r\n                  type=\"gstNum\"\r\n                  placeholder=\"Company GST Number\"\r\n                  onChange={(event) => setGstNum(event.currentTarget.value)}\r\n                />\r\n              </FormControl>\r\n              <FormControl mt={2}>\r\n                <FormLabel>Website</FormLabel>\r\n                <Input\r\n                  type=\"website\"\r\n                  placeholder=\"Company Website\"\r\n                  onChange={(event) => setWebsite(event.currentTarget.value)}\r\n                />\r\n              </FormControl>\r\n              <Button\r\n                isLoading={isloading}\r\n                loadingText=\"Submitting\"\r\n                variant=\"outline\"\r\n                colorScheme=\"teal\"\r\n                width=\"full\"\r\n                mt={4}\r\n                type=\"submit\"\r\n              >\r\n                Save\r\n              </Button>\r\n            </form>\r\n          </Box>\r\n        </Box>\r\n      </Flex>\r\n    </>\r\n  );\r\n}\r\n","import { StrictMode } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nimport { ChakraProvider, ColorModeScript } from \"@chakra-ui/react\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <ColorModeScript />\r\n    <ChakraProvider>\r\n      <App />\r\n    </ChakraProvider>\r\n  </StrictMode>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}